---
const navItems = [
  { href: '/', text: 'Home' },
  { href: '/about', text: 'About' },
  { href: '/projects', text: 'Projects' },
  { href: '/contact', text: 'Contact' },
];

const pathname = Astro.url.pathname;
---

<header class="fixed top-0 w-full bg-white/90 dark:bg-gray-900/90 backdrop-blur-md z-50 shadow-sm transition-all duration-300">
  <div class="container mx-auto px-4 py-4 flex justify-between items-center">
    <a href="/" class="text-2xl font-montserrat font-bold tracking-tight text-primary-600 dark:text-primary-400">
      JR<span class="text-accent-500">.</span>
    </a>
    
    <!-- Desktop Navigation -->
    <nav class="hidden md:flex items-center space-x-8">
      {navItems.map(item => (
        <a 
          href={item.href}
          class={`font-medium transition-colors duration-300 hover:text-primary-500 ${
            pathname === item.href ? 'text-primary-600 dark:text-primary-400' : 'text-gray-700 dark:text-gray-300'
          }`}
        >
          {item.text}
        </a>
      ))}
      <button id="theme-toggle" class="p-2 rounded-full hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors duration-300">
        <span class="sr-only">Toggle theme</span>
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 block dark:hidden" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
        </svg>
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 hidden dark:block" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
        </svg>
      </button>
    </nav>
    
    <!-- Mobile Menu Button -->
    <button id="mobile-menu-toggle" class="md:hidden p-2 text-gray-700 dark:text-gray-300 hover:text-primary-500 dark:hover:text-primary-400 transition-colors duration-300">
      <span class="sr-only">Menu</span>
      <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16m-7 6h7" />
      </svg>
    </button>
  </div>
  
  <!-- Mobile Navigation -->
  <div id="mobile-menu" class="md:hidden hidden bg-white dark:bg-gray-900 shadow-md">
    <div class="container mx-auto px-4 py-4 flex flex-col space-y-4">
      {navItems.map(item => (
        <a 
          href={item.href}
          class={`font-medium py-2 transition-colors duration-300 hover:text-primary-500 ${
            pathname === item.href ? 'text-primary-600 dark:text-primary-400' : 'text-gray-700 dark:text-gray-300'
          }`}
        >
          {item.text}
        </a>
      ))}
      <div class="flex items-center justify-between pt-4 border-t border-gray-200 dark:border-gray-700">
        <span class="text-sm text-gray-600 dark:text-gray-400">Switch theme</span>
        <button id="mobile-theme-toggle" class="p-2 rounded-full hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors duration-300">
          <span class="sr-only">Toggle theme</span>
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 block dark:hidden" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
          </svg>
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 hidden dark:block" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
          </svg>
        </button>
      </div>
    </div>
  </div>
</header>

<script>
  // Mobile menu toggle
  const mobileMenuToggle = document.getElementById('mobile-menu-toggle');
  const mobileMenu = document.getElementById('mobile-menu');
  
  mobileMenuToggle?.addEventListener('click', () => {
    mobileMenu?.classList.toggle('hidden');
  });
  
  // Mobile theme toggle
  const mobileThemeToggle = document.getElementById('mobile-theme-toggle');
  
  mobileThemeToggle?.addEventListener('click', () => {
    document.documentElement.classList.toggle('dark');
    const currentTheme = document.documentElement.classList.contains('dark') ? 'dark' : 'light';
    localStorage.setItem('theme', currentTheme);
  });
  
  // Close mobile menu when window resizes to desktop size
  window.addEventListener('resize', () => {
    if (window.innerWidth >= 768) {
      mobileMenu?.classList.add('hidden');
    }
  });
</script>